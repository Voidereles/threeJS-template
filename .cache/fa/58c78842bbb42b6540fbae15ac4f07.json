{"id":"shaders/vertex.glsl","dependencies":[{"name":"/mnt/c/Users/voide/OneDrive/Documents/GitHub/threeJS-template/package.json","includedInParent":true,"mtime":1605654449601}],"generated":{"js":"module.exports = \"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec3 vPos;\\nvarying vec2 vCoordinates;\\nattribute vec3 aCoordinates;\\nattribute float aSpeed;\\nattribute float aOffset;\\n\\nattribute float aDirection;\\nattribute float aPress;\\n\\nuniform float move;\\nuniform float time;\\n\\nuniform vec2 mouse;\\nuniform float mousePressed;\\n\\nuniform float transition;\\n\\nvoid main() {\\n  vUv = uv;\\n\\n//NOT STABLE\\nvec3 pos = position;\\npos.x += sin(move*aSpeed)*3. ;\\npos.y += sin(move*aSpeed)*3. ;\\npos.z = mod(position.z + move*200.*aSpeed + aOffset, 2000.) - 1000.;\\n//dzięki mod ZAWSZE będziemy widzieć cząśteczki\\n\\n//STABLE \\nvec3 stable = position;\\nfloat dist = distance(stable.xy,mouse);\\nfloat area = 1. - smoothstep(0.,300.,dist);\\n\\nstable.x += 50.*sin(0.11*time*aPress)*aDirection*area*mousePressed;\\nstable.y += 50.*sin(0.11*time*aPress)*aDirection*area*mousePressed;\\nstable.z += 200.*cos(0.11*time*aPress)*aDirection*area*mousePressed;\\n\\npos = mix(pos,stable,transition);\\n\\n  vec4 mvPosition = modelViewMatrix * vec4( pos, 1. );\\n  // vec4 mvPosition = modelViewMatrix * vec4( stable, 1. );\\n  gl_PointSize = 2500. * ( 1. / - mvPosition.z );\\n  //when particles will be more far from the camera they will be smaller\\n  gl_Position = projectionMatrix * mvPosition;\\n\\n  vCoordinates = aCoordinates.xy;\\n  vPos = pos;\\n}\";"},"sourceMaps":{"js":{"mappings":[{"name":"module","generated":{"line":1,"column":0},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":6},"source":"shaders/vertex.glsl","original":{"line":1,"column":6}},{"name":"exports","generated":{"line":1,"column":7},"source":"shaders/vertex.glsl","original":{"line":1,"column":7}},{"generated":{"line":1,"column":14},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}},{"generated":{"line":1,"column":17},"source":"shaders/vertex.glsl","original":{"line":1,"column":15}},{"generated":{"line":1,"column":1335},"source":"shaders/vertex.glsl","original":{"line":1,"column":0}}],"sources":{"shaders/vertex.glsl":"module.exports=\"#define GLSLIFY 1\\nvarying vec2 vUv;\\nvarying vec3 vPos;\\nvarying vec2 vCoordinates;\\nattribute vec3 aCoordinates;\\nattribute float aSpeed;\\nattribute float aOffset;\\n\\nattribute float aDirection;\\nattribute float aPress;\\n\\nuniform float move;\\nuniform float time;\\n\\nuniform vec2 mouse;\\nuniform float mousePressed;\\n\\nuniform float transition;\\n\\nvoid main() {\\n  vUv = uv;\\n\\n//NOT STABLE\\nvec3 pos = position;\\npos.x += sin(move*aSpeed)*3. ;\\npos.y += sin(move*aSpeed)*3. ;\\npos.z = mod(position.z + move*200.*aSpeed + aOffset, 2000.) - 1000.;\\n//dzięki mod ZAWSZE będziemy widzieć cząśteczki\\n\\n//STABLE \\nvec3 stable = position;\\nfloat dist = distance(stable.xy,mouse);\\nfloat area = 1. - smoothstep(0.,300.,dist);\\n\\nstable.x += 50.*sin(0.11*time*aPress)*aDirection*area*mousePressed;\\nstable.y += 50.*sin(0.11*time*aPress)*aDirection*area*mousePressed;\\nstable.z += 200.*cos(0.11*time*aPress)*aDirection*area*mousePressed;\\n\\npos = mix(pos,stable,transition);\\n\\n  vec4 mvPosition = modelViewMatrix * vec4( pos, 1. );\\n  // vec4 mvPosition = modelViewMatrix * vec4( stable, 1. );\\n  gl_PointSize = 2500. * ( 1. / - mvPosition.z );\\n  //when particles will be more far from the camera they will be smaller\\n  gl_Position = projectionMatrix * mvPosition;\\n\\n  vCoordinates = aCoordinates.xy;\\n  vPos = pos;\\n}\";"},"lineCount":null}},"error":null,"hash":"55fab90ddfd91322bc6321c2e19bd0ba","cacheData":{"env":{}}}